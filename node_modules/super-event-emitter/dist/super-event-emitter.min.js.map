{"version":3,"sources":["webpack:///webpack/universalModuleDefinition?5ca6","webpack:///super-event-emitter.min.js","webpack:///webpack/bootstrap b0d7854783107bd599d3?5bd6","webpack:///./index.js?8213","webpack:///./lib/index.js?f03c","webpack:///./package.json?70ff"],"names":["root","factory","exports","module","define","amd","this","modules","__webpack_require__","moduleId","installedModules","id","loaded","call","m","c","p","forEach","list","iterator","isForEachSupported","Array","prototype","i","length","filter","isFilterSupported","result","value","push","assert","cond","msg","Error","isString","arg","isFunction","EventEmitter","_listeners","pkg","EventEmitterProto","on","name","fn","ctx","once","onHandler","apply","arguments","self","off","listener","emit","params","event","isWildcard","test","addEventListener","addListener","bind","removeEventListener","removeListener","unbind","dispatchEventListener","dispatchListener","trigger","mixin","target","emitter","key","VERSION","version","description","license","author","email","url","scripts","build","watch","coverage","coveralls","repository","type","devDependencies","istanbul","jasmine","json-loader","string-replace-loader","webpack","files","keywords","main"],"mappings":"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","file":"super-event-emitter.min.js","sourcesContent":["(function webpackUniversalModuleDefinition(root, factory) {\n\tif(typeof exports === 'object' && typeof module === 'object')\n\t\tmodule.exports = factory();\n\telse if(typeof define === 'function' && define.amd)\n\t\tdefine([], factory);\n\telse if(typeof exports === 'object')\n\t\texports[\"EventEmitter\"] = factory();\n\telse\n\t\troot[\"EventEmitter\"] = factory();\n})(this, function() {\nreturn \n\n\n/** WEBPACK FOOTER **\n ** webpack/universalModuleDefinition\n **/","(function webpackUniversalModuleDefinition(root, factory) {\n\tif(typeof exports === 'object' && typeof module === 'object')\n\t\tmodule.exports = factory();\n\telse if(typeof define === 'function' && define.amd)\n\t\tdefine([], factory);\n\telse if(typeof exports === 'object')\n\t\texports[\"EventEmitter\"] = factory();\n\telse\n\t\troot[\"EventEmitter\"] = factory();\n})(this, function() {\nreturn /******/ (function(modules) { // webpackBootstrap\n/******/ \t// The module cache\n/******/ \tvar installedModules = {};\n/******/\n/******/ \t// The require function\n/******/ \tfunction __webpack_require__(moduleId) {\n/******/\n/******/ \t\t// Check if module is in cache\n/******/ \t\tif(installedModules[moduleId])\n/******/ \t\t\treturn installedModules[moduleId].exports;\n/******/\n/******/ \t\t// Create a new module (and put it into the cache)\n/******/ \t\tvar module = installedModules[moduleId] = {\n/******/ \t\t\texports: {},\n/******/ \t\t\tid: moduleId,\n/******/ \t\t\tloaded: false\n/******/ \t\t};\n/******/\n/******/ \t\t// Execute the module function\n/******/ \t\tmodules[moduleId].call(module.exports, module, module.exports, __webpack_require__);\n/******/\n/******/ \t\t// Flag the module as loaded\n/******/ \t\tmodule.loaded = true;\n/******/\n/******/ \t\t// Return the exports of the module\n/******/ \t\treturn module.exports;\n/******/ \t}\n/******/\n/******/\n/******/ \t// expose the modules object (__webpack_modules__)\n/******/ \t__webpack_require__.m = modules;\n/******/\n/******/ \t// expose the module cache\n/******/ \t__webpack_require__.c = installedModules;\n/******/\n/******/ \t// __webpack_public_path__\n/******/ \t__webpack_require__.p = \"\";\n/******/\n/******/ \t// Load entry module and return exports\n/******/ \treturn __webpack_require__(0);\n/******/ })\n/************************************************************************/\n/******/ ([\n/* 0 */\n/***/ function(module, exports, __webpack_require__) {\n\n\t'use strict';\n\t\n\tmodule.exports = __webpack_require__(1);\n\n\n/***/ },\n/* 1 */\n/***/ function(module, exports, __webpack_require__) {\n\n\t/**\n\t * @author Piotr Kowalski <piecioshka@gmail.com> (https://piecioshka.pl/)\n\t * @name super-event-emitter\n\t * @description Super small (2KB) and simple interpretation of popular event management.\n\t * @version 4.1.4\n\t * @license MIT\n\t * @example\n\t * var bar = {}; // Or any other object.\n\t * EventEmitter.mixin(bar);\n\t * bar.on('foo', function () {\n\t *     console.log('foo event emitted');\n\t * });\n\t * bar.emit('foo');\n\t */\n\t\n\t'use strict';\n\t\n\tvar pkg = __webpack_require__(2);\n\t\n\t// Helpers.\n\t\n\tfunction forEach(list, iterator) {\n\t    var isForEachSupported = 'forEach' in Array.prototype;\n\t\n\t    if (isForEachSupported) {\n\t        list.forEach(iterator);\n\t    } else {\n\t        for (var i = 0; i < list.length; i += 1) {\n\t            iterator(list[i]);\n\t        }\n\t    }\n\t}\n\t\n\tfunction filter(list, iterator) {\n\t    var isFilterSupported = 'filter' in Array.prototype;\n\t\n\t    if (isFilterSupported) {\n\t        return list.filter(iterator);\n\t    } else {\n\t        var result = [];\n\t\n\t        for (var i = 0; i < list.length; i += 1) {\n\t            var value = list[i];\n\t\n\t            if (iterator(value)) {\n\t                result.push(value);\n\t            }\n\t        }\n\t\n\t        return result;\n\t    }\n\t}\n\t\n\tfunction assert(cond, msg) {\n\t    if (!cond) throw new Error(msg);\n\t}\n\t\n\tfunction isString(arg) {\n\t    return typeof arg === 'string';\n\t}\n\t\n\tfunction isFunction(arg) {\n\t    return typeof arg === 'function';\n\t}\n\t\n\t// Main part.\n\t\n\tvar EventEmitterProto = {\n\t    /**\n\t     * Register listener on concrete name with specified handler.\n\t     *\n\t     * @param {string} name\n\t     * @param {Function} fn\n\t     * @param {Object} [ctx]\n\t     */\n\t    on: function (name, fn, ctx) {\n\t        assert(isString(name), 'EventEmitter#on: name is not a string');\n\t        assert(isFunction(fn), 'EventEmitter#on: fn is not a function');\n\t\n\t        // If the context is not passed, use `this`.\n\t        ctx = ctx || this;\n\t\n\t        // Push to private lists of listeners.\n\t        this._listeners.push({\n\t            name: name,\n\t            fn: fn,\n\t            ctx: ctx\n\t        });\n\t\n\t        return this;\n\t    },\n\t\n\t    /**\n\t     * Register listener.\n\t     * Remove them after once event triggered.\n\t     *\n\t     * @param {string} name\n\t     * @param {Function} fn\n\t     * @param {Object} [ctx]\n\t     */\n\t    once: function (name, fn, ctx) {\n\t        // If the context is not passed, use `this`.\n\t        ctx = ctx || this;\n\t\n\t        var self = this;\n\t\n\t        function onHandler() {\n\t            fn.apply(ctx, arguments);\n\t            self.off(name, onHandler);\n\t        }\n\t\n\t        this.on(name, onHandler, ctx);\n\t\n\t        return this;\n\t    },\n\t\n\t    /**\n\t     * Unregister listener.\n\t     * Remove concrete listener by name and itself definition.\n\t     *\n\t     * @param {string} [name]\n\t     * @param {Function} [fn]\n\t     */\n\t    off: function (name, fn) {\n\t        this._listeners = !name ? [] : filter(this._listeners, function (listener) {\n\t            if (listener.name !== name) {\n\t                return true;\n\t            } else {\n\t                if (isFunction(fn)) {\n\t                    return listener.fn !== fn;\n\t                } else {\n\t                    return false;\n\t                }\n\t            }\n\t        });\n\t\n\t        return this;\n\t    },\n\t\n\t    /**\n\t     * Trigger event.\n\t     * All of listeners waiting for emit event will be executed.\n\t     *\n\t     * @param {string} name\n\t     * @param {Object} [params]\n\t     */\n\t    emit: function (name, params) {\n\t        assert(isString(name), 'EventEmitter#emit: name is not a string');\n\t\n\t        forEach(this._listeners, function (event) {\n\t            if (event.name === name) {\n\t                event.fn.call(event.ctx, params);\n\t            }\n\t\n\t            // Special behaviour for wildcard - invoke each event handler.\n\t            var isWildcard = (/^all|\\*$/).test(event.name);\n\t\n\t            if (isWildcard) {\n\t                event.fn.call(event.ctx, name, params);\n\t            }\n\t        });\n\t\n\t        return this;\n\t    }\n\t};\n\t\n\t// Aliases.\n\tEventEmitterProto.addEventListener = EventEmitterProto.addListener = EventEmitterProto.bind = EventEmitterProto.on;\n\tEventEmitterProto.removeEventListener = EventEmitterProto.removeListener = EventEmitterProto.unbind = EventEmitterProto.off;\n\tEventEmitterProto.dispatchEventListener = EventEmitterProto.dispatchListener = EventEmitterProto.trigger = EventEmitterProto.emit;\n\t\n\tfunction EventEmitter() {\n\t    if (!(this instanceof EventEmitter)) {\n\t        return new EventEmitter();\n\t    }\n\t\n\t    this._listeners = [];\n\t}\n\t\n\tEventEmitter.prototype = EventEmitterProto;\n\t\n\t/**\n\t * Mixin properties.\n\t * Best way to setup EventEmitter on any object.\n\t *\n\t * @param {Object} target\n\t */\n\tEventEmitter.mixin = function (target) {\n\t    var emitter = new EventEmitter();\n\t\n\t    for (var key in emitter) {\n\t        target[key] = emitter[key];\n\t    }\n\t\n\t    return target;\n\t};\n\t\n\t// Allow crating new mixed in objects from the instance.\n\tEventEmitter.prototype.mixin = EventEmitter.mixin;\n\t\n\t// Put project version.\n\tEventEmitter.VERSION = pkg.version;\n\t\n\t// Exports.\n\tmodule.exports = EventEmitter;\n\n\n/***/ },\n/* 2 */\n/***/ function(module, exports) {\n\n\tmodule.exports = {\n\t\t\"name\": \"super-event-emitter\",\n\t\t\"description\": \"Super small (2KB) and simple interpretation of popular event management.\",\n\t\t\"version\": \"4.1.4\",\n\t\t\"license\": \"MIT\",\n\t\t\"author\": {\n\t\t\t\"name\": \"Piotr Kowalski\",\n\t\t\t\"email\": \"piecioshka@gmail.com\",\n\t\t\t\"url\": \"https://piecioshka.pl/\"\n\t\t},\n\t\t\"scripts\": {\n\t\t\t\"build\": \"webpack --profile\",\n\t\t\t\"watch\": \"webpack -w\",\n\t\t\t\"test\": \"jasmine JASMINE_CONFIG_PATH=test/unit/jasmine.json\",\n\t\t\t\"coverage\": \"istanbul cover jasmine JASMINE_CONFIG_PATH=test/unit/jasmine.json\",\n\t\t\t\"coveralls\": \"npm run coverage && cat ./coverage/lcov.info | coveralls -v\"\n\t\t},\n\t\t\"repository\": {\n\t\t\t\"type\": \"git\",\n\t\t\t\"url\": \"http://github.com/piecioshka/super-event-emitter.git\"\n\t\t},\n\t\t\"devDependencies\": {\n\t\t\t\"coveralls\": \"^2.11.12\",\n\t\t\t\"istanbul\": \"^0.4.4\",\n\t\t\t\"jasmine\": \"^2.4.1\",\n\t\t\t\"json-loader\": \"^0.5.4\",\n\t\t\t\"string-replace-loader\": \"^1.0.3\",\n\t\t\t\"webpack\": \"^1.12.14\"\n\t\t},\n\t\t\"files\": [\n\t\t\t\"dist\",\n\t\t\t\"lib\",\n\t\t\t\"index.js\",\n\t\t\t\"package.json\",\n\t\t\t\"README.md\"\n\t\t],\n\t\t\"keywords\": [\n\t\t\t\"super\",\n\t\t\t\"event\",\n\t\t\t\"emitter\",\n\t\t\t\"mixin\",\n\t\t\t\"on\",\n\t\t\t\"off\",\n\t\t\t\"emit\",\n\t\t\t\"trigger\",\n\t\t\t\"simple\"\n\t\t],\n\t\t\"main\": \"./dist/super-event-emitter.min.js\"\n\t};\n\n/***/ }\n/******/ ])\n});\n;\n\n\n/** WEBPACK FOOTER **\n ** super-event-emitter.min.js\n **/"," \t// The module cache\n \tvar installedModules = {};\n\n \t// The require function\n \tfunction __webpack_require__(moduleId) {\n\n \t\t// Check if module is in cache\n \t\tif(installedModules[moduleId])\n \t\t\treturn installedModules[moduleId].exports;\n\n \t\t// Create a new module (and put it into the cache)\n \t\tvar module = installedModules[moduleId] = {\n \t\t\texports: {},\n \t\t\tid: moduleId,\n \t\t\tloaded: false\n \t\t};\n\n \t\t// Execute the module function\n \t\tmodules[moduleId].call(module.exports, module, module.exports, __webpack_require__);\n\n \t\t// Flag the module as loaded\n \t\tmodule.loaded = true;\n\n \t\t// Return the exports of the module\n \t\treturn module.exports;\n \t}\n\n\n \t// expose the modules object (__webpack_modules__)\n \t__webpack_require__.m = modules;\n\n \t// expose the module cache\n \t__webpack_require__.c = installedModules;\n\n \t// __webpack_public_path__\n \t__webpack_require__.p = \"\";\n\n \t// Load entry module and return exports\n \treturn __webpack_require__(0);\n\n\n\n/** WEBPACK FOOTER **\n ** webpack/bootstrap b0d7854783107bd599d3\n **/","'use strict';\n\nmodule.exports = require('./lib/index');\n\n\n\n/** WEBPACK FOOTER **\n ** ./~/string-replace-loader?{\"multiple\":[{\"search\":\"$AUTHOR$\",\"replace\":\"Piotr Kowalski <piecioshka@gmail.com> (https:/piecioshka.pl/)\"},{\"search\":\"$NAME$\",\"replace\":\"super-event-emitter\"},{\"search\":\"$DESCRIPTION$\",\"replace\":\"Super small (2KB) and simple interpretation of popular event management.\"},{\"search\":\"$VERSION$\",\"replace\":\"4.1.4\"},{\"search\":\"$LICENSE$\",\"replace\":\"MIT\"}]}!./index.js\n **/","/**\n * @author Piotr Kowalski <piecioshka@gmail.com> (https://piecioshka.pl/)\n * @name super-event-emitter\n * @description Super small (2KB) and simple interpretation of popular event management.\n * @version 4.1.4\n * @license MIT\n * @example\n * var bar = {}; // Or any other object.\n * EventEmitter.mixin(bar);\n * bar.on('foo', function () {\n *     console.log('foo event emitted');\n * });\n * bar.emit('foo');\n */\n\n'use strict';\n\nvar pkg = require('../package.json');\n\n// Helpers.\n\nfunction forEach(list, iterator) {\n    var isForEachSupported = 'forEach' in Array.prototype;\n\n    if (isForEachSupported) {\n        list.forEach(iterator);\n    } else {\n        for (var i = 0; i < list.length; i += 1) {\n            iterator(list[i]);\n        }\n    }\n}\n\nfunction filter(list, iterator) {\n    var isFilterSupported = 'filter' in Array.prototype;\n\n    if (isFilterSupported) {\n        return list.filter(iterator);\n    } else {\n        var result = [];\n\n        for (var i = 0; i < list.length; i += 1) {\n            var value = list[i];\n\n            if (iterator(value)) {\n                result.push(value);\n            }\n        }\n\n        return result;\n    }\n}\n\nfunction assert(cond, msg) {\n    if (!cond) throw new Error(msg);\n}\n\nfunction isString(arg) {\n    return typeof arg === 'string';\n}\n\nfunction isFunction(arg) {\n    return typeof arg === 'function';\n}\n\n// Main part.\n\nvar EventEmitterProto = {\n    /**\n     * Register listener on concrete name with specified handler.\n     *\n     * @param {string} name\n     * @param {Function} fn\n     * @param {Object} [ctx]\n     */\n    on: function (name, fn, ctx) {\n        assert(isString(name), 'EventEmitter#on: name is not a string');\n        assert(isFunction(fn), 'EventEmitter#on: fn is not a function');\n\n        // If the context is not passed, use `this`.\n        ctx = ctx || this;\n\n        // Push to private lists of listeners.\n        this._listeners.push({\n            name: name,\n            fn: fn,\n            ctx: ctx\n        });\n\n        return this;\n    },\n\n    /**\n     * Register listener.\n     * Remove them after once event triggered.\n     *\n     * @param {string} name\n     * @param {Function} fn\n     * @param {Object} [ctx]\n     */\n    once: function (name, fn, ctx) {\n        // If the context is not passed, use `this`.\n        ctx = ctx || this;\n\n        var self = this;\n\n        function onHandler() {\n            fn.apply(ctx, arguments);\n            self.off(name, onHandler);\n        }\n\n        this.on(name, onHandler, ctx);\n\n        return this;\n    },\n\n    /**\n     * Unregister listener.\n     * Remove concrete listener by name and itself definition.\n     *\n     * @param {string} [name]\n     * @param {Function} [fn]\n     */\n    off: function (name, fn) {\n        this._listeners = !name ? [] : filter(this._listeners, function (listener) {\n            if (listener.name !== name) {\n                return true;\n            } else {\n                if (isFunction(fn)) {\n                    return listener.fn !== fn;\n                } else {\n                    return false;\n                }\n            }\n        });\n\n        return this;\n    },\n\n    /**\n     * Trigger event.\n     * All of listeners waiting for emit event will be executed.\n     *\n     * @param {string} name\n     * @param {Object} [params]\n     */\n    emit: function (name, params) {\n        assert(isString(name), 'EventEmitter#emit: name is not a string');\n\n        forEach(this._listeners, function (event) {\n            if (event.name === name) {\n                event.fn.call(event.ctx, params);\n            }\n\n            // Special behaviour for wildcard - invoke each event handler.\n            var isWildcard = (/^all|\\*$/).test(event.name);\n\n            if (isWildcard) {\n                event.fn.call(event.ctx, name, params);\n            }\n        });\n\n        return this;\n    }\n};\n\n// Aliases.\nEventEmitterProto.addEventListener = EventEmitterProto.addListener = EventEmitterProto.bind = EventEmitterProto.on;\nEventEmitterProto.removeEventListener = EventEmitterProto.removeListener = EventEmitterProto.unbind = EventEmitterProto.off;\nEventEmitterProto.dispatchEventListener = EventEmitterProto.dispatchListener = EventEmitterProto.trigger = EventEmitterProto.emit;\n\nfunction EventEmitter() {\n    if (!(this instanceof EventEmitter)) {\n        return new EventEmitter();\n    }\n\n    this._listeners = [];\n}\n\nEventEmitter.prototype = EventEmitterProto;\n\n/**\n * Mixin properties.\n * Best way to setup EventEmitter on any object.\n *\n * @param {Object} target\n */\nEventEmitter.mixin = function (target) {\n    var emitter = new EventEmitter();\n\n    for (var key in emitter) {\n        target[key] = emitter[key];\n    }\n\n    return target;\n};\n\n// Allow crating new mixed in objects from the instance.\nEventEmitter.prototype.mixin = EventEmitter.mixin;\n\n// Put project version.\nEventEmitter.VERSION = pkg.version;\n\n// Exports.\nmodule.exports = EventEmitter;\n\n\n\n/** WEBPACK FOOTER **\n ** ./~/string-replace-loader?{\"multiple\":[{\"search\":\"$AUTHOR$\",\"replace\":\"Piotr Kowalski <piecioshka@gmail.com> (https:/piecioshka.pl/)\"},{\"search\":\"$NAME$\",\"replace\":\"super-event-emitter\"},{\"search\":\"$DESCRIPTION$\",\"replace\":\"Super small (2KB) and simple interpretation of popular event management.\"},{\"search\":\"$VERSION$\",\"replace\":\"4.1.4\"},{\"search\":\"$LICENSE$\",\"replace\":\"MIT\"}]}!./lib/index.js\n **/","module.exports = {\n\t\"name\": \"super-event-emitter\",\n\t\"description\": \"Super small (2KB) and simple interpretation of popular event management.\",\n\t\"version\": \"4.1.4\",\n\t\"license\": \"MIT\",\n\t\"author\": {\n\t\t\"name\": \"Piotr Kowalski\",\n\t\t\"email\": \"piecioshka@gmail.com\",\n\t\t\"url\": \"https://piecioshka.pl/\"\n\t},\n\t\"scripts\": {\n\t\t\"build\": \"webpack --profile\",\n\t\t\"watch\": \"webpack -w\",\n\t\t\"test\": \"jasmine JASMINE_CONFIG_PATH=test/unit/jasmine.json\",\n\t\t\"coverage\": \"istanbul cover jasmine JASMINE_CONFIG_PATH=test/unit/jasmine.json\",\n\t\t\"coveralls\": \"npm run coverage && cat ./coverage/lcov.info | coveralls -v\"\n\t},\n\t\"repository\": {\n\t\t\"type\": \"git\",\n\t\t\"url\": \"http://github.com/piecioshka/super-event-emitter.git\"\n\t},\n\t\"devDependencies\": {\n\t\t\"coveralls\": \"^2.11.12\",\n\t\t\"istanbul\": \"^0.4.4\",\n\t\t\"jasmine\": \"^2.4.1\",\n\t\t\"json-loader\": \"^0.5.4\",\n\t\t\"string-replace-loader\": \"^1.0.3\",\n\t\t\"webpack\": \"^1.12.14\"\n\t},\n\t\"files\": [\n\t\t\"dist\",\n\t\t\"lib\",\n\t\t\"index.js\",\n\t\t\"package.json\",\n\t\t\"README.md\"\n\t],\n\t\"keywords\": [\n\t\t\"super\",\n\t\t\"event\",\n\t\t\"emitter\",\n\t\t\"mixin\",\n\t\t\"on\",\n\t\t\"off\",\n\t\t\"emit\",\n\t\t\"trigger\",\n\t\t\"simple\"\n\t],\n\t\"main\": \"./dist/super-event-emitter.min.js\"\n};\n\n\n/*****************\n ** WEBPACK FOOTER\n ** ./package.json\n ** module id = 2\n ** module chunks = 0 1\n **/"],"sourceRoot":""}